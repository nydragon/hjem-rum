name: "Integration Tests"

on:
  pull_request:
    #branches:
      #- main
    #path:
      #- modules/**

jobs:
  create-test-plan:
    name: Create test plan

    runs-on: ubuntu-latest
    outputs:
      checks: ${{ steps.get-changed-checks.outputs.checks }}
      run-all-checks: ${{ steps.get-changed-checks.outputs.run-all-checks }}
    steps:
      - uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0
      - uses: DeterminateSystems/nix-installer-action@v17
      - name: Get changed checks
        id: get-changed-checks
        run: |
          allChangedFiles="$(git diff ${{ github.sha }} origin/${{ github.base_ref }} --name-only)";

          echo "run-all-checks=false" >> $GITHUB_OUTPUT

          if echo "$allChangedFiles" | grep modules/lib/; then
            echo Changes to 'modules/lib/' detected, running all tests...
            echo "run-all-checks=true" >> $GITHUB_OUTPUT
            exit 0;
          fi

          echo "$allChangedFiles"

          changedFiles=$(echo "$allChangedFiles" \
            | grep \
                -P "^modules/(tests|collection)/\K(.+?/.+?)(?=\.nix|/)" \
                --only-matching \
            | sed 's/\//-/g' | sort | uniq \
            | jq -s -R 'split("\n") | .[:-1]');

          echo "$changedFiles"

          checksToRun=$(nix eval .#checks.x86_64-linux --apply builtins.attrNames --json \
            | jq \
                --compact-output \
                --argjson selection "$changedFiles" \
                '. as $checks | $selection | map(. as $sel | $checks[] | select(. | contains($sel)))');

          echo Running the following tests:
          echo "$(echo $checksToRun | jq '.[]')"

          echo "checks=$checksToRun" >> "$GITHUB_OUTPUT";

  run-checks:
    name: Run select checks
    runs-on: ubuntu-latest
    needs: create-test-plan
    if: ${{ needs.create-test-plan.outputs.run-all-checks == 'false' && needs.create-test-plan.outputs.checks != '[]' && needs.create-test-plan.outputs.checks != '' }}
    strategy:
      matrix:
        check: ${{ fromJSON(needs.create-test-plan.outputs.checks) }}
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: DeterminateSystems/nix-installer-action@v17
      - run: |
         nix run .#checks.x86_64-linux.${{ matrix.check }}.driver

  integration-tests:
    name: Run all checks
    runs-on: ubuntu-latest
    needs: create-test-plan
    if: ${{ needs.create-test-plan.outputs.run-all-checks == 'true' }}
    steps:
      - uses: actions/checkout@v4.1.7
      - uses: DeterminateSystems/nix-installer-action@v17
      - run: |
          nix flake check
